# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
spec:
  chart:
    spec:
      chart: loki
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: grafana
      version: 6.x.x
  dependsOn:
    - name: kube-prometheus-stack
      namespace: monitoring
  install:
    crds: Create
    createNamespace: true
  interval: 1m
  targetNamespace: monitoring
  upgrade:
    crds: CreateReplace
  values:
    # Ref:
    # - https://grafana.com/docs/loki/latest/setup/install/helm/install-monolithic/#single-replica
    # - https://stackoverflow.com/a/74014831
    deploymentMode: SingleBinary
    loki:
      auth_enabled: false
      limits_config:
        allow_structured_metadata: true
        volume_enabled: true
      commonConfig:
        replication_factor: 1
      schemaConfig:
        configs:
          - from: "2024-04-01"
            object_store: filesystem
            store: tsdb
            schema: v13
            index:
              prefix: index_
              period: 24h
      storage:
        type: filesystem
        filesystem:
          chunks_directory: /var/loki/chunks
          rules_directory: /var/loki/rules
      rulerConfig:
        enable_api: true
        storage:
          type: local
    singleBinary:
      replicas: 1
      persistence:
        enabled: true
        accessModes:
          - ReadWriteOnce
        size: 15Gi
        storageClass: null
      resources:
        requests:
          cpu: 350m
          memory: 800Mi
        limits:
          cpu: 400m
          memory: 1Gi
      extraEnv:
        # Keep a little bit lower than memory limits
        - name: GOMEMLIMIT
          value: 950MiB
    gateway:
      enabled: true
      replicas: 1
      resources:
        requests:
          cpu: 10m
          memory: 15Mi
        limits:
          cpu: 10m
          memory: 25Mi
    # Zero out replica counts of other deployment modes
    backend:
      replicas: 0
    read:
      replicas: 0
    write:
      replicas: 0
    ingester:
      replicas: 0
    querier:
      replicas: 0
    queryFrontend:
      replicas: 0
    queryScheduler:
      replicas: 0
    distributor:
      replicas: 0
    compactor:
      replicas: 0
    indexGateway:
      replicas: 0
    bloomCompactor:
      replicas: 0
    bloomGateway:
      replicas: 0
    monitoring:
      dashboards:
        enabled: true
        labels:
          grafana_dashboard: "1"
      rules:
        enabled: true
        alerting: true
        disabled: {}
        # LokiRequestErrors: true
        # LokiRequestPanics: true
        additionalGroups: []
        # - name: additional-loki-rules
        #   rules:
        #     - record: job:loki_request_duration_seconds_bucket:sum_rate
        #       expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job)
        #     - record: job_route:loki_request_duration_seconds_bucket:sum_rate
        #       expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job, route)
        #     - record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate
        #       expr: sum(rate(container_cpu_usage_seconds_total[1m])) by (node, namespace, pod, container)
      serviceMonitor:
        enabled: true
        labels:
          release: monitoring-kube-prometheus-stack
